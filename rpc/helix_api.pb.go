// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: helix_api.proto

package rpc

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Login           string `protobuf:"bytes,2,opt,name=Login,proto3" json:"Login,omitempty"`
	DisplayName     string `protobuf:"bytes,3,opt,name=DisplayName,proto3" json:"DisplayName,omitempty"`
	Description     string `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	ProfileImageURL string `protobuf:"bytes,5,opt,name=ProfileImageURL,proto3" json:"ProfileImageURL,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helix_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_helix_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_helix_api_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *User) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *User) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *User) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *User) GetProfileImageURL() string {
	if x != nil {
		return x.ProfileImageURL
	}
	return ""
}

type Game struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	BoxArtURL string `protobuf:"bytes,3,opt,name=BoxArtURL,proto3" json:"BoxArtURL,omitempty"`
}

func (x *Game) Reset() {
	*x = Game{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helix_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Game) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Game) ProtoMessage() {}

func (x *Game) ProtoReflect() protoreflect.Message {
	mi := &file_helix_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Game.ProtoReflect.Descriptor instead.
func (*Game) Descriptor() ([]byte, []int) {
	return file_helix_api_proto_rawDescGZIP(), []int{1}
}

func (x *Game) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Game) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Game) GetBoxArtURL() string {
	if x != nil {
		return x.BoxArtURL
	}
	return ""
}

type Stream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID   string `protobuf:"bytes,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	UserName string `protobuf:"bytes,3,opt,name=UserName,proto3" json:"UserName,omitempty"`
	GameID   string `protobuf:"bytes,4,opt,name=GameID,proto3" json:"GameID,omitempty"`
	Title    string `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`
}

func (x *Stream) Reset() {
	*x = Stream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helix_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stream) ProtoMessage() {}

func (x *Stream) ProtoReflect() protoreflect.Message {
	mi := &file_helix_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stream.ProtoReflect.Descriptor instead.
func (*Stream) Descriptor() ([]byte, []int) {
	return file_helix_api_proto_rawDescGZIP(), []int{2}
}

func (x *Stream) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Stream) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *Stream) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *Stream) GetGameID() string {
	if x != nil {
		return x.GameID
	}
	return ""
}

func (x *Stream) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type MultiQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDs   []string `protobuf:"bytes,1,rep,name=IDs,proto3" json:"IDs,omitempty"`
	Names []string `protobuf:"bytes,2,rep,name=Names,proto3" json:"Names,omitempty"`
}

func (x *MultiQuery) Reset() {
	*x = MultiQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helix_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultiQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultiQuery) ProtoMessage() {}

func (x *MultiQuery) ProtoReflect() protoreflect.Message {
	mi := &file_helix_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultiQuery.ProtoReflect.Descriptor instead.
func (*MultiQuery) Descriptor() ([]byte, []int) {
	return file_helix_api_proto_rawDescGZIP(), []int{3}
}

func (x *MultiQuery) GetIDs() []string {
	if x != nil {
		return x.IDs
	}
	return nil
}

func (x *MultiQuery) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Users []*User `protobuf:"bytes,1,rep,name=Users,proto3" json:"Users,omitempty"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helix_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_helix_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_helix_api_proto_rawDescGZIP(), []int{4}
}

func (x *Users) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type Games struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Games []*Game `protobuf:"bytes,1,rep,name=Games,proto3" json:"Games,omitempty"`
}

func (x *Games) Reset() {
	*x = Games{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helix_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Games) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Games) ProtoMessage() {}

func (x *Games) ProtoReflect() protoreflect.Message {
	mi := &file_helix_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Games.ProtoReflect.Descriptor instead.
func (*Games) Descriptor() ([]byte, []int) {
	return file_helix_api_proto_rawDescGZIP(), []int{5}
}

func (x *Games) GetGames() []*Game {
	if x != nil {
		return x.Games
	}
	return nil
}

type Streams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Streams []*Stream `protobuf:"bytes,1,rep,name=Streams,proto3" json:"Streams,omitempty"`
}

func (x *Streams) Reset() {
	*x = Streams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_helix_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Streams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Streams) ProtoMessage() {}

func (x *Streams) ProtoReflect() protoreflect.Message {
	mi := &file_helix_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Streams.ProtoReflect.Descriptor instead.
func (*Streams) Descriptor() ([]byte, []int) {
	return file_helix_api_proto_rawDescGZIP(), []int{6}
}

func (x *Streams) GetStreams() []*Stream {
	if x != nil {
		return x.Streams
	}
	return nil
}

var File_helix_api_proto protoreflect.FileDescriptor

var file_helix_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x68, 0x65, 0x6c, 0x69, 0x78, 0x5f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x03, 0x72, 0x70, 0x63, 0x22, 0x9a, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x14, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x52, 0x4c, 0x22, 0x48, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x42, 0x6f, 0x78, 0x41, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x42, 0x6f, 0x78, 0x41, 0x72, 0x74, 0x55, 0x52, 0x4c, 0x22, 0x7a, 0x0a,
	0x06, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x47,
	0x61, 0x6d, 0x65, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x47, 0x61, 0x6d,
	0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x34, 0x0a, 0x0a, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x49, 0x44, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x49, 0x44, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x22,
	0x28, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x22, 0x28, 0x0a, 0x05, 0x47, 0x61, 0x6d,
	0x65, 0x73, 0x12, 0x1f, 0x0a, 0x05, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x47, 0x61,
	0x6d, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x07, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x25,
	0x0a, 0x07, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x07, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x73, 0x32, 0x8c, 0x01, 0x0a, 0x0b, 0x54, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x27, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x1a, 0x0a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x27,
	0x0a, 0x08, 0x47, 0x65, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x0f, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0a, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x73, 0x12, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x0c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x73, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x64, 0x6e, 0x73, 0x67, 0x65, 0x2f, 0x67, 0x6f, 0x2d, 0x74, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x2d, 0x63, 0x61, 0x63, 0x68, 0x65, 0x2f, 0x72, 0x70, 0x63, 0x3b, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_helix_api_proto_rawDescOnce sync.Once
	file_helix_api_proto_rawDescData = file_helix_api_proto_rawDesc
)

func file_helix_api_proto_rawDescGZIP() []byte {
	file_helix_api_proto_rawDescOnce.Do(func() {
		file_helix_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_helix_api_proto_rawDescData)
	})
	return file_helix_api_proto_rawDescData
}

var file_helix_api_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_helix_api_proto_goTypes = []interface{}{
	(*User)(nil),       // 0: rpc.User
	(*Game)(nil),       // 1: rpc.Game
	(*Stream)(nil),     // 2: rpc.Stream
	(*MultiQuery)(nil), // 3: rpc.MultiQuery
	(*Users)(nil),      // 4: rpc.Users
	(*Games)(nil),      // 5: rpc.Games
	(*Streams)(nil),    // 6: rpc.Streams
}
var file_helix_api_proto_depIdxs = []int32{
	0, // 0: rpc.Users.Users:type_name -> rpc.User
	1, // 1: rpc.Games.Games:type_name -> rpc.Game
	2, // 2: rpc.Streams.Streams:type_name -> rpc.Stream
	3, // 3: rpc.TwitchCache.GetUsers:input_type -> rpc.MultiQuery
	3, // 4: rpc.TwitchCache.GetGames:input_type -> rpc.MultiQuery
	3, // 5: rpc.TwitchCache.GetStreams:input_type -> rpc.MultiQuery
	4, // 6: rpc.TwitchCache.GetUsers:output_type -> rpc.Users
	5, // 7: rpc.TwitchCache.GetGames:output_type -> rpc.Games
	6, // 8: rpc.TwitchCache.GetStreams:output_type -> rpc.Streams
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_helix_api_proto_init() }
func file_helix_api_proto_init() {
	if File_helix_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_helix_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helix_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Game); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helix_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helix_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultiQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helix_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helix_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Games); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_helix_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Streams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_helix_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_helix_api_proto_goTypes,
		DependencyIndexes: file_helix_api_proto_depIdxs,
		MessageInfos:      file_helix_api_proto_msgTypes,
	}.Build()
	File_helix_api_proto = out.File
	file_helix_api_proto_rawDesc = nil
	file_helix_api_proto_goTypes = nil
	file_helix_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TwitchCacheClient is the client API for TwitchCache service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TwitchCacheClient interface {
	GetUsers(ctx context.Context, in *MultiQuery, opts ...grpc.CallOption) (*Users, error)
	GetGames(ctx context.Context, in *MultiQuery, opts ...grpc.CallOption) (*Games, error)
	GetStreams(ctx context.Context, in *MultiQuery, opts ...grpc.CallOption) (*Streams, error)
}

type twitchCacheClient struct {
	cc grpc.ClientConnInterface
}

func NewTwitchCacheClient(cc grpc.ClientConnInterface) TwitchCacheClient {
	return &twitchCacheClient{cc}
}

func (c *twitchCacheClient) GetUsers(ctx context.Context, in *MultiQuery, opts ...grpc.CallOption) (*Users, error) {
	out := new(Users)
	err := c.cc.Invoke(ctx, "/rpc.TwitchCache/GetUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twitchCacheClient) GetGames(ctx context.Context, in *MultiQuery, opts ...grpc.CallOption) (*Games, error) {
	out := new(Games)
	err := c.cc.Invoke(ctx, "/rpc.TwitchCache/GetGames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *twitchCacheClient) GetStreams(ctx context.Context, in *MultiQuery, opts ...grpc.CallOption) (*Streams, error) {
	out := new(Streams)
	err := c.cc.Invoke(ctx, "/rpc.TwitchCache/GetStreams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TwitchCacheServer is the server API for TwitchCache service.
type TwitchCacheServer interface {
	GetUsers(context.Context, *MultiQuery) (*Users, error)
	GetGames(context.Context, *MultiQuery) (*Games, error)
	GetStreams(context.Context, *MultiQuery) (*Streams, error)
}

// UnimplementedTwitchCacheServer can be embedded to have forward compatible implementations.
type UnimplementedTwitchCacheServer struct {
}

func (*UnimplementedTwitchCacheServer) GetUsers(context.Context, *MultiQuery) (*Users, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUsers not implemented")
}
func (*UnimplementedTwitchCacheServer) GetGames(context.Context, *MultiQuery) (*Games, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGames not implemented")
}
func (*UnimplementedTwitchCacheServer) GetStreams(context.Context, *MultiQuery) (*Streams, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStreams not implemented")
}

func RegisterTwitchCacheServer(s *grpc.Server, srv TwitchCacheServer) {
	s.RegisterService(&_TwitchCache_serviceDesc, srv)
}

func _TwitchCache_GetUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwitchCacheServer).GetUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TwitchCache/GetUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwitchCacheServer).GetUsers(ctx, req.(*MultiQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwitchCache_GetGames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwitchCacheServer).GetGames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TwitchCache/GetGames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwitchCacheServer).GetGames(ctx, req.(*MultiQuery))
	}
	return interceptor(ctx, in, info, handler)
}

func _TwitchCache_GetStreams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TwitchCacheServer).GetStreams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.TwitchCache/GetStreams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TwitchCacheServer).GetStreams(ctx, req.(*MultiQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _TwitchCache_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.TwitchCache",
	HandlerType: (*TwitchCacheServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUsers",
			Handler:    _TwitchCache_GetUsers_Handler,
		},
		{
			MethodName: "GetGames",
			Handler:    _TwitchCache_GetGames_Handler,
		},
		{
			MethodName: "GetStreams",
			Handler:    _TwitchCache_GetStreams_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "helix_api.proto",
}
